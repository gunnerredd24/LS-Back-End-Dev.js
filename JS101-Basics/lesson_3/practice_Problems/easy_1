Q1: No it will not raise an error. It will create elemnts leading upto 6 making each of them empty slots and not = to anything, not even undefined.

Bonus:
It will return undefined.

Q2: You can use the endsWith('!') string method and it returns true if it ends with the passed argument and it can be passed a 2nd argument to see what character you want it to end on.

Q3: ages.hasOwnProperty('Spot');

**
Q4: let newString = 
munstersDescription.charAt(0).toUpperCase() +
munstersDescription.subString(1).toLowerCase();
**

Q5: 
true
false

Q6: Object.assign(ages, additionalAges);

Q7: str1.includes('Dino');
str2.includes('Dino');

Q8: flintstones.push('Dino');

Q9: flintstones.push('Dino', 'Hoppy');

Q10: advice.substring(0, advice.search('house'));